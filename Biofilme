import math as mt
import numpy as np
import matplotlib.pyplot as plt

#Variaveis:
delta=0.002#comprimento do biofilme em[m^3]
N=100#Numero de pontos da Malha
k=1.9e-2#Constante da reção quimica em [1/s]
Dab=2.0e-10#Difusidade do phenol em[m^2/s]
Co=0.02#Concentração inicial em[mol/m^3]
dz=delta/(N-1)#calculo do delta Z

#Fazendo a Matriz
z=np.linspace(0,delta,N)#Criando a malha
A=np.zeros((N,N))#Criando a matriz dos coeficientes
B=np.zeros(N)#Criando o vetor
print(f'Malha: {N} pontos')#Imprime o tamanho da malha
A[0,0]=1#Define a posição 00 da Matriz a como 1
B[0]=Co#Define a posição inicial do vetor como 0.02
#Definição dos nos internos da malha
for i in np.arange(1,N-1):
    A[i,i-1]=1
    A[i,i]=-(2+(dz**2*k)/Dab)
    A[i,i+1]=1
    B[i]=0
A[N-1,N-2]=-1
A[N-1,N-1]=1
B[N-1]=0 

#resolve o sistema linear
C=np.linalg.solve(A,B)
 
#Resolução do problema de maneira analtica
def Ca(z):
    return ((Co*np.cosh(delta-z)*mt.sqrt(k/Dab))/(np.cosh(delta*(mt.sqrt(k/Dab)))))
X=np.linspace(0,delta,N)
Y=np.zeros(N)
for i, Xi in enumerate(X):
    Y[i]=Ca(Xi)
    print(f'Valor de x:{X} <--')
    print(f'Valor de Y:{Y} <--')

#Calculo do erro
erro=0
for j, Xj in enumerate(z):
    erro+=np.abs(Ca(Xj)-C[j])
erro/=N
print(f'Erro:{erro} <--')

#Fazendo o grafico
#plt.plot(z,C,'g')
plt.plot(X,Y,'r')
plt.ylabel('Concentração,C_a(z)(mol/m^3)')
plt.xlabel('Penetração no biofilme,z(mm)')
plt.show()
